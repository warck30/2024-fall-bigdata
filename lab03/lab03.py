# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lO6Chi6JGtX4BL4tbQj0ynN_bkpvHd0R
"""

pip install pyspark

from pyspark.sql import SparkSession

# Создаем Spark сессию
spark = SparkSession.builder.appName("PublicCateringAnalysis").getOrCreate()

# Загружаем данные
data = spark.read.csv("data.csv", header=True, inferSchema=True, sep=";")

# Показываем первые несколько строк данных
data.show(5)

# Количество объектов по административным округам
adm_area_count = data.groupBy("AdmArea").count().orderBy("count", ascending=False)
adm_area_count.show()

# Количество объектов по типам объектов
type_object_count = data.groupBy("TypeObject").count().orderBy("count", ascending=False)
type_object_count.show()

# Среднее количество посадочных мест по типам объектов
average_seats_by_type = data.groupBy("TypeObject").agg({"SeatsCount": "avg"}).orderBy("TypeObject")
average_seats_by_type.show()

# Количество объектов по районам
district_count = data.groupBy("District").count().orderBy("count", ascending=False)
district_count.show()

# Количество сетевых объектов
network_count = data.groupBy("IsNetObject").count().orderBy("count", ascending=False)
network_count.show()

import matplotlib.pyplot as plt
import pandas as pd

# Преобразуем данные в Pandas DataFrame для визуализации
adm_area_count_pd = adm_area_count.toPandas()

# Строим график
plt.figure(figsize=(10, 6))
plt.bar(adm_area_count_pd["AdmArea"], adm_area_count_pd["count"])
plt.xlabel("Administrative Area")
plt.ylabel("Count")
plt.title("Number of Public Catering Objects by Administrative Area")
plt.xticks(rotation=45)
plt.show()

# Преобразуем данные в Pandas DataFrame для визуализации
type_object_count_pd = type_object_count.toPandas()

# Строим график
plt.figure(figsize=(10, 6))
plt.bar(type_object_count_pd["TypeObject"], type_object_count_pd["count"])
plt.xlabel("Type of Object")
plt.ylabel("Count")
plt.title("Number of Public Catering Objects by Type")
plt.xticks(rotation=45)
plt.show()

# Преобразуем данные в Pandas DataFrame для визуализации
average_seats_by_type_pd = average_seats_by_type.toPandas()

# Строим график
plt.figure(figsize=(10, 6))
plt.bar(average_seats_by_type_pd["TypeObject"], average_seats_by_type_pd["avg(SeatsCount)"])
plt.xlabel("Type of Object")
plt.ylabel("Average Seats Count")
plt.title("Average Seats Count by Type of Object")
plt.xticks(rotation=45)
plt.show()